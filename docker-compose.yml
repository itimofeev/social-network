---
version: "3.4"
services:

  proxy:
    image: nginx:1.25-alpine
    volumes:
      - type: bind
        source: ./tools/proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "80:80"

  migrate:
    build: .
    image: social-network:local
    platform: linux/x86_64
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: postgres://admin:admin@db:5432/social-network?sslmode=disable
    command: [ "/goose", "-dir", "migrations", "up" ]
    depends_on:
      - db
    restart: on-failure

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: social-network
    ports:
      - '5432:5432'
    volumes:
      - postgres-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6-jammy
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: sc
    ports:
      - '27017:27017'
    volumes:
      - mongo-db:/data/db

volumes:
  postgres-db:
  mongo-db: