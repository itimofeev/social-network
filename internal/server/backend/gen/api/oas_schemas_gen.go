// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"
)

// AuthGetOK is response for AuthGet operation.
type AuthGetOK struct {
	XScUserID string
}

// GetXScUserID returns the value of XScUserID.
func (s *AuthGetOK) GetXScUserID() string {
	return s.XScUserID
}

// SetXScUserID sets the value of XScUserID.
func (s *AuthGetOK) SetXScUserID(val string) {
	s.XScUserID = val
}

func (*AuthGetOK) authGetRes() {}

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

type BirthDate time.Time

type FriendDeleteUserIDPutInternalServerError R5xxStatusCodeWithHeaders

func (*FriendDeleteUserIDPutInternalServerError) friendDeleteUserIDPutRes() {}

// FriendDeleteUserIDPutOK is response for FriendDeleteUserIDPut operation.
type FriendDeleteUserIDPutOK struct{}

func (*FriendDeleteUserIDPutOK) friendDeleteUserIDPutRes() {}

type FriendDeleteUserIDPutServiceUnavailable R5xxStatusCodeWithHeaders

func (*FriendDeleteUserIDPutServiceUnavailable) friendDeleteUserIDPutRes() {}

type FriendSetUserIDPutInternalServerError R5xxStatusCodeWithHeaders

func (*FriendSetUserIDPutInternalServerError) friendSetUserIDPutRes() {}

// FriendSetUserIDPutOK is response for FriendSetUserIDPut operation.
type FriendSetUserIDPutOK struct{}

func (*FriendSetUserIDPutOK) friendSetUserIDPutRes() {}

type FriendSetUserIDPutServiceUnavailable R5xxStatusCodeWithHeaders

func (*FriendSetUserIDPutServiceUnavailable) friendSetUserIDPutRes() {}

// LoginPostBadRequest is response for LoginPost operation.
type LoginPostBadRequest struct{}

func (*LoginPostBadRequest) loginPostRes() {}

type LoginPostInternalServerError R5xxStatusCodeWithHeaders

func (*LoginPostInternalServerError) loginPostRes() {}

// LoginPostNotFound is response for LoginPost operation.
type LoginPostNotFound struct{}

func (*LoginPostNotFound) loginPostRes() {}

type LoginPostOK struct {
	Token OptString `json:"token"`
}

// GetToken returns the value of Token.
func (s *LoginPostOK) GetToken() OptString {
	return s.Token
}

// SetToken sets the value of Token.
func (s *LoginPostOK) SetToken(val OptString) {
	s.Token = val
}

func (*LoginPostOK) loginPostRes() {}

type LoginPostReq struct {
	ID       OptUserId `json:"id"`
	Password OptString `json:"password"`
}

// GetID returns the value of ID.
func (s *LoginPostReq) GetID() OptUserId {
	return s.ID
}

// GetPassword returns the value of Password.
func (s *LoginPostReq) GetPassword() OptString {
	return s.Password
}

// SetID sets the value of ID.
func (s *LoginPostReq) SetID(val OptUserId) {
	s.ID = val
}

// SetPassword sets the value of Password.
func (s *LoginPostReq) SetPassword(val OptString) {
	s.Password = val
}

type LoginPostServiceUnavailable R5xxStatusCodeWithHeaders

func (*LoginPostServiceUnavailable) loginPostRes() {}

// NewOptBirthDate returns new OptBirthDate with value set to v.
func NewOptBirthDate(v BirthDate) OptBirthDate {
	return OptBirthDate{
		Value: v,
		Set:   true,
	}
}

// OptBirthDate is optional BirthDate.
type OptBirthDate struct {
	Value BirthDate
	Set   bool
}

// IsSet returns true if OptBirthDate was set.
func (o OptBirthDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBirthDate) Reset() {
	var v BirthDate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBirthDate) SetTo(v BirthDate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBirthDate) Get() (v BirthDate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBirthDate) Or(d BirthDate) BirthDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLoginPostReq returns new OptLoginPostReq with value set to v.
func NewOptLoginPostReq(v LoginPostReq) OptLoginPostReq {
	return OptLoginPostReq{
		Value: v,
		Set:   true,
	}
}

// OptLoginPostReq is optional LoginPostReq.
type OptLoginPostReq struct {
	Value LoginPostReq
	Set   bool
}

// IsSet returns true if OptLoginPostReq was set.
func (o OptLoginPostReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLoginPostReq) Reset() {
	var v LoginPostReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLoginPostReq) SetTo(v LoginPostReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLoginPostReq) Get() (v LoginPostReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLoginPostReq) Or(d LoginPostReq) LoginPostReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserId returns new OptUserId with value set to v.
func NewOptUserId(v UserId) OptUserId {
	return OptUserId{
		Value: v,
		Set:   true,
	}
}

// OptUserId is optional UserId.
type OptUserId struct {
	Value UserId
	Set   bool
}

// IsSet returns true if OptUserId was set.
func (o OptUserId) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserId) Reset() {
	var v UserId
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserId) SetTo(v UserId) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserId) Get() (v UserId, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserId) Or(d UserId) UserId {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserRegisterPostReq returns new OptUserRegisterPostReq with value set to v.
func NewOptUserRegisterPostReq(v UserRegisterPostReq) OptUserRegisterPostReq {
	return OptUserRegisterPostReq{
		Value: v,
		Set:   true,
	}
}

// OptUserRegisterPostReq is optional UserRegisterPostReq.
type OptUserRegisterPostReq struct {
	Value UserRegisterPostReq
	Set   bool
}

// IsSet returns true if OptUserRegisterPostReq was set.
func (o OptUserRegisterPostReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserRegisterPostReq) Reset() {
	var v UserRegisterPostReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserRegisterPostReq) SetTo(v UserRegisterPostReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserRegisterPostReq) Get() (v UserRegisterPostReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserRegisterPostReq) Or(d UserRegisterPostReq) UserRegisterPostReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Пост пользователя.
// Ref: #/components/schemas/Post
type Post struct {
	ID           PostId   `json:"id"`
	Text         PostText `json:"text"`
	AuthorUserID UserId   `json:"author_user_id"`
}

// GetID returns the value of ID.
func (s *Post) GetID() PostId {
	return s.ID
}

// GetText returns the value of Text.
func (s *Post) GetText() PostText {
	return s.Text
}

// GetAuthorUserID returns the value of AuthorUserID.
func (s *Post) GetAuthorUserID() UserId {
	return s.AuthorUserID
}

// SetID sets the value of ID.
func (s *Post) SetID(val PostId) {
	s.ID = val
}

// SetText sets the value of Text.
func (s *Post) SetText(val PostText) {
	s.Text = val
}

// SetAuthorUserID sets the value of AuthorUserID.
func (s *Post) SetAuthorUserID(val UserId) {
	s.AuthorUserID = val
}

func (*Post) postGetIDGetRes() {}

type PostCreatePostInternalServerError R5xxStatusCodeWithHeaders

func (*PostCreatePostInternalServerError) postCreatePostRes() {}

type PostCreatePostReq struct {
	Text PostText `json:"text"`
}

// GetText returns the value of Text.
func (s *PostCreatePostReq) GetText() PostText {
	return s.Text
}

// SetText sets the value of Text.
func (s *PostCreatePostReq) SetText(val PostText) {
	s.Text = val
}

type PostCreatePostServiceUnavailable R5xxStatusCodeWithHeaders

func (*PostCreatePostServiceUnavailable) postCreatePostRes() {}

type PostDeleteIDPutInternalServerError R5xxStatusCodeWithHeaders

func (*PostDeleteIDPutInternalServerError) postDeleteIDPutRes() {}

// PostDeleteIDPutOK is response for PostDeleteIDPut operation.
type PostDeleteIDPutOK struct{}

func (*PostDeleteIDPutOK) postDeleteIDPutRes() {}

type PostDeleteIDPutServiceUnavailable R5xxStatusCodeWithHeaders

func (*PostDeleteIDPutServiceUnavailable) postDeleteIDPutRes() {}

type PostFeedGetInternalServerError R5xxStatusCodeWithHeaders

func (*PostFeedGetInternalServerError) postFeedGetRes() {}

type PostFeedGetOKApplicationJSON []Post

func (*PostFeedGetOKApplicationJSON) postFeedGetRes() {}

type PostFeedGetServiceUnavailable R5xxStatusCodeWithHeaders

func (*PostFeedGetServiceUnavailable) postFeedGetRes() {}

type PostGetIDGetInternalServerError R5xxStatusCodeWithHeaders

func (*PostGetIDGetInternalServerError) postGetIDGetRes() {}

type PostGetIDGetServiceUnavailable R5xxStatusCodeWithHeaders

func (*PostGetIDGetServiceUnavailable) postGetIDGetRes() {}

type PostId string

func (*PostId) postCreatePostRes() {}

type PostText string

type PostUpdatePutInternalServerError R5xxStatusCodeWithHeaders

func (*PostUpdatePutInternalServerError) postUpdatePutRes() {}

// PostUpdatePutOK is response for PostUpdatePut operation.
type PostUpdatePutOK struct{}

func (*PostUpdatePutOK) postUpdatePutRes() {}

type PostUpdatePutReq struct {
	ID   PostId   `json:"id"`
	Text PostText `json:"text"`
}

// GetID returns the value of ID.
func (s *PostUpdatePutReq) GetID() PostId {
	return s.ID
}

// GetText returns the value of Text.
func (s *PostUpdatePutReq) GetText() PostText {
	return s.Text
}

// SetID sets the value of ID.
func (s *PostUpdatePutReq) SetID(val PostId) {
	s.ID = val
}

// SetText sets the value of Text.
func (s *PostUpdatePutReq) SetText(val PostText) {
	s.Text = val
}

type PostUpdatePutServiceUnavailable R5xxStatusCodeWithHeaders

func (*PostUpdatePutServiceUnavailable) postUpdatePutRes() {}

// Ref: #/components/responses/400
type R400 struct{}

func (*R400) friendDeleteUserIDPutRes() {}
func (*R400) friendSetUserIDPutRes()    {}
func (*R400) postCreatePostRes()        {}
func (*R400) postDeleteIDPutRes()       {}
func (*R400) postFeedGetRes()           {}
func (*R400) postGetIDGetRes()          {}
func (*R400) postUpdatePutRes()         {}

// Ref: #/components/responses/401
type R401 struct{}

func (*R401) authGetRes()               {}
func (*R401) friendDeleteUserIDPutRes() {}
func (*R401) friendSetUserIDPutRes()    {}
func (*R401) postCreatePostRes()        {}
func (*R401) postDeleteIDPutRes()       {}
func (*R401) postFeedGetRes()           {}
func (*R401) postGetIDGetRes()          {}
func (*R401) postUpdatePutRes()         {}

type R5xx struct {
	// Описание ошибки.
	Message string `json:"message"`
	// Идентификатор запроса. Предназначен для более
	// быстрого поиска проблем.
	RequestID OptString `json:"request_id"`
	// Код ошибки. Предназначен для классификации проблем и
	// более быстрого решения проблем.
	Code OptInt `json:"code"`
}

// GetMessage returns the value of Message.
func (s *R5xx) GetMessage() string {
	return s.Message
}

// GetRequestID returns the value of RequestID.
func (s *R5xx) GetRequestID() OptString {
	return s.RequestID
}

// GetCode returns the value of Code.
func (s *R5xx) GetCode() OptInt {
	return s.Code
}

// SetMessage sets the value of Message.
func (s *R5xx) SetMessage(val string) {
	s.Message = val
}

// SetRequestID sets the value of RequestID.
func (s *R5xx) SetRequestID(val OptString) {
	s.RequestID = val
}

// SetCode sets the value of Code.
func (s *R5xx) SetCode(val OptInt) {
	s.Code = val
}

// R5xxStatusCodeWithHeaders wraps R5xx with status code and response headers.
type R5xxStatusCodeWithHeaders struct {
	StatusCode int
	RetryAfter OptInt
	Response   R5xx
}

// GetStatusCode returns the value of StatusCode.
func (s *R5xxStatusCodeWithHeaders) GetStatusCode() int {
	return s.StatusCode
}

// GetRetryAfter returns the value of RetryAfter.
func (s *R5xxStatusCodeWithHeaders) GetRetryAfter() OptInt {
	return s.RetryAfter
}

// GetResponse returns the value of Response.
func (s *R5xxStatusCodeWithHeaders) GetResponse() R5xx {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *R5xxStatusCodeWithHeaders) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetRetryAfter sets the value of RetryAfter.
func (s *R5xxStatusCodeWithHeaders) SetRetryAfter(val OptInt) {
	s.RetryAfter = val
}

// SetResponse sets the value of Response.
func (s *R5xxStatusCodeWithHeaders) SetResponse(val R5xx) {
	s.Response = val
}

func (*R5xxStatusCodeWithHeaders) authGetRes() {}

// Ref: #/components/schemas/User
type User struct {
	ID OptUserId `json:"id"`
	// Имя.
	FirstName OptString `json:"first_name"`
	// Фамилия.
	SecondName OptString    `json:"second_name"`
	Birthdate  OptBirthDate `json:"birthdate"`
	// Интересы.
	Biography OptString `json:"biography"`
	// Город.
	City OptString `json:"city"`
}

// GetID returns the value of ID.
func (s *User) GetID() OptUserId {
	return s.ID
}

// GetFirstName returns the value of FirstName.
func (s *User) GetFirstName() OptString {
	return s.FirstName
}

// GetSecondName returns the value of SecondName.
func (s *User) GetSecondName() OptString {
	return s.SecondName
}

// GetBirthdate returns the value of Birthdate.
func (s *User) GetBirthdate() OptBirthDate {
	return s.Birthdate
}

// GetBiography returns the value of Biography.
func (s *User) GetBiography() OptString {
	return s.Biography
}

// GetCity returns the value of City.
func (s *User) GetCity() OptString {
	return s.City
}

// SetID sets the value of ID.
func (s *User) SetID(val OptUserId) {
	s.ID = val
}

// SetFirstName sets the value of FirstName.
func (s *User) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetSecondName sets the value of SecondName.
func (s *User) SetSecondName(val OptString) {
	s.SecondName = val
}

// SetBirthdate sets the value of Birthdate.
func (s *User) SetBirthdate(val OptBirthDate) {
	s.Birthdate = val
}

// SetBiography sets the value of Biography.
func (s *User) SetBiography(val OptString) {
	s.Biography = val
}

// SetCity sets the value of City.
func (s *User) SetCity(val OptString) {
	s.City = val
}

func (*User) userGetIDGetRes() {}

// UserGetIDGetBadRequest is response for UserGetIDGet operation.
type UserGetIDGetBadRequest struct{}

func (*UserGetIDGetBadRequest) userGetIDGetRes() {}

type UserGetIDGetInternalServerError R5xxStatusCodeWithHeaders

func (*UserGetIDGetInternalServerError) userGetIDGetRes() {}

// UserGetIDGetNotFound is response for UserGetIDGet operation.
type UserGetIDGetNotFound struct{}

func (*UserGetIDGetNotFound) userGetIDGetRes() {}

type UserGetIDGetServiceUnavailable R5xxStatusCodeWithHeaders

func (*UserGetIDGetServiceUnavailable) userGetIDGetRes() {}

type UserId string

// UserRegisterPostBadRequest is response for UserRegisterPost operation.
type UserRegisterPostBadRequest struct{}

func (*UserRegisterPostBadRequest) userRegisterPostRes() {}

type UserRegisterPostInternalServerError R5xxStatusCodeWithHeaders

func (*UserRegisterPostInternalServerError) userRegisterPostRes() {}

type UserRegisterPostOK struct {
	UserID OptString `json:"user_id"`
}

// GetUserID returns the value of UserID.
func (s *UserRegisterPostOK) GetUserID() OptString {
	return s.UserID
}

// SetUserID sets the value of UserID.
func (s *UserRegisterPostOK) SetUserID(val OptString) {
	s.UserID = val
}

func (*UserRegisterPostOK) userRegisterPostRes() {}

type UserRegisterPostReq struct {
	FirstName  OptString    `json:"first_name"`
	SecondName OptString    `json:"second_name"`
	Birthdate  OptBirthDate `json:"birthdate"`
	Biography  OptString    `json:"biography"`
	City       OptString    `json:"city"`
	Password   OptString    `json:"password"`
}

// GetFirstName returns the value of FirstName.
func (s *UserRegisterPostReq) GetFirstName() OptString {
	return s.FirstName
}

// GetSecondName returns the value of SecondName.
func (s *UserRegisterPostReq) GetSecondName() OptString {
	return s.SecondName
}

// GetBirthdate returns the value of Birthdate.
func (s *UserRegisterPostReq) GetBirthdate() OptBirthDate {
	return s.Birthdate
}

// GetBiography returns the value of Biography.
func (s *UserRegisterPostReq) GetBiography() OptString {
	return s.Biography
}

// GetCity returns the value of City.
func (s *UserRegisterPostReq) GetCity() OptString {
	return s.City
}

// GetPassword returns the value of Password.
func (s *UserRegisterPostReq) GetPassword() OptString {
	return s.Password
}

// SetFirstName sets the value of FirstName.
func (s *UserRegisterPostReq) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetSecondName sets the value of SecondName.
func (s *UserRegisterPostReq) SetSecondName(val OptString) {
	s.SecondName = val
}

// SetBirthdate sets the value of Birthdate.
func (s *UserRegisterPostReq) SetBirthdate(val OptBirthDate) {
	s.Birthdate = val
}

// SetBiography sets the value of Biography.
func (s *UserRegisterPostReq) SetBiography(val OptString) {
	s.Biography = val
}

// SetCity sets the value of City.
func (s *UserRegisterPostReq) SetCity(val OptString) {
	s.City = val
}

// SetPassword sets the value of Password.
func (s *UserRegisterPostReq) SetPassword(val OptString) {
	s.Password = val
}

type UserRegisterPostServiceUnavailable R5xxStatusCodeWithHeaders

func (*UserRegisterPostServiceUnavailable) userRegisterPostRes() {}

// UserSearchGetBadRequest is response for UserSearchGet operation.
type UserSearchGetBadRequest struct{}

func (*UserSearchGetBadRequest) userSearchGetRes() {}

type UserSearchGetInternalServerError R5xxStatusCodeWithHeaders

func (*UserSearchGetInternalServerError) userSearchGetRes() {}

type UserSearchGetOKApplicationJSON []User

func (*UserSearchGetOKApplicationJSON) userSearchGetRes() {}

type UserSearchGetServiceUnavailable R5xxStatusCodeWithHeaders

func (*UserSearchGetServiceUnavailable) userSearchGetRes() {}
